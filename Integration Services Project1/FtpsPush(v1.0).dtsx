<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/29/2021 4:28:47 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TRAINING1"
  DTS:CreatorName="LCPUD\mattm"
  DTS:DTSID="{2FCE610D-9424-4744-8D27-681C13961595}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="FtpsPush v1 0"
  DTS:PackageType="5"
  DTS:VersionBuild="39"
  DTS:VersionGUID="{ED6E02BE-1B9A-4F13-9D76-D29CCC111F1B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D279973B-C9F6-447A-A385-89BE92D9CB50}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarFileName">
      <DTS:VariableValue
        DTS:DataType="8">archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F2ED7F2-F10A-4B09-A502-2F4B5D84CF6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarHostName">
      <DTS:VariableValue
        DTS:DataType="8">172.19.124.133</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FAB9A531-13A9-44CD-B8F8-1C2F4C4B8197}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarLocalPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\quick\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F17F91FD-CC21-405E-A881-08466E726514}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarPassword">
      <DTS:VariableValue
        DTS:DataType="8">mylittlered08AVEO!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2ED5DE3F-D507-4354-95DA-EC351401EB77}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarServerPath">
      <DTS:VariableValue
        DTS:DataType="8">/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D6B5256-5D9B-4DC8-A196-CEEE8FBB2338}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarTlsHostCert">
      <DTS:VariableValue
        DTS:DataType="8">19:c9:75:1a:cd:9f:49:ae:10:b3:9c:a8:fe:d7:22:e3:2d:15:4c:f7:cd:39:6b:b7:6c:a6:b2:4e:d4:22:ff:e0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA978B88-032C-4138-B8AE-D58A5A876EB9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarUserName">
      <DTS:VariableValue
        DTS:DataType="8">mattm</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task - Push File to Server"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{70468529-3FD8-4D1E-9A25-706D3F4987C0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Push File to Server"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_234340032f3e4420bfe701dd8e8cbcde"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::VarFileName,User::VarHostName,User::VarLocalPath,User::VarPassword,User::VarServerPath,User::VarTlsHostCert,User::VarUserName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Settings.get_Default():ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Sett" +
    "ings")]

namespace ST_234340032f3e4420bfe701dd8e8cbcde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_234340032f3e4420bfe701dd8e8cbcde.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9E393F36-5431-474A-B362-46490B0F86AB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_234340032f3e4420bfe701dd8e8cbcde</RootNamespace>
    <AssemblyName>ST_234340032f3e4420bfe701dd8e8cbcde</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <NuGetPackageImportStamp></NuGetPackageImportStamp>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.8.3.11552, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\mattm\Desktop\Work\XML_to_JSON_Proj\winscp\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
using System.IO;
#endregion

namespace ST_234340032f3e4420bfe701dd8e8cbcde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }

        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //If dll can't be found. this will point it to a location that has it stored.
            if (args.Name.ToUpper().Contains("WINSCP"))
            {
                //Path to Dll file location.
                string path = @"P:\Shared Documents\Information Systems Shared Documents\JSON\dlls\";
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "WinSCPnet.dll"));
            }
            return null;
        }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            
            // TODO: Add your code here
            // Setup session options
            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Ftp,
                HostName = Dts.Variables["User::VarHostName"].Value.ToString(),
                UserName = Dts.Variables["User::VarUserName"].Value.ToString(),
                Password = Dts.Variables["User::VarPassword"].Value.ToString(),
                FtpSecure = FtpSecure.Explicit,
                TlsHostCertificateFingerprint = Dts.Variables["User::VarTlsHostCert"].Value.ToString()
            };

            try
            {
                using (Session session = new Session())
                {
                    // Connect
                    session.Open(sessionOptions);

                    var localPath = Dts.Variables["User::VarLocalPath"].Value.ToString();
                    var serverPath = Dts.Variables["User::VarServerPath"].Value.ToString();
                    var fileName = Dts.Variables["User::VarFileName"].Value.ToString();

                    
                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                    if (String.IsNullOrEmpty(fileName)) // folder sync
                    {
                        session.SynchronizeDirectories(SynchronizationMode.Remote, localPath, serverPath, false, false, SynchronizationCriteria.Either, null);
                    }

                    else if (fileName.Contains(@"\")) // folder transfer
                    {
                        session.PutFiles(localPath + fileName, serverPath, false, transferOptions);
                    }

                    else if (fileName.Contains("*") || fileName.Contains("?")) //wildcard transfer
                    {
                        session.PutFilesToDirectory(localPath, serverPath, fileName, false, transferOptions);
                    }

                    else //Single file transfer
                    {
                        if (session.FileExists(serverPath + fileName)) //check if file exists on server
                        {
                            if (!session.GetFileInfo(serverPath + fileName).LastWriteTime.Equals(File.GetLastWriteTime(localPath + fileName))) // check if files are different versions. If they're then delete server copy before transfer.
                            {
                                session.RemoveFile(serverPath + fileName);
                                session.PutFileToDirectory(localPath + fileName, serverPath);
                            }
                            //If file exists on server and versions are the same. No need to do anything
                        }
                        else //file doesn't exists on server. So put it there.
                        {
                            session.PutFileToDirectory(localPath + fileName, serverPath);
                        }
                    }
                    session.Close();
                }
            }
            catch (Exception e)
            {
                MessageBox.Show(e.ToString());
            }
            

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_234340032f3e4420bfe701dd8e8cbcde</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_234340032f3e4420bfe701dd8e8cbcde</msb:DisplayName>
    <msb:ProjectId>{674D7366-4A34-4352-88BA-523ADC11BBF3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_234340032f3e4420bfe701dd8e8cbcde.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_234340032f3e4420bfe701dd8e8cbcde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_234340032f3e4420bfe701dd8e8cbcde")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_234340032f3e4420bfe701dd8e8cbcde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_234340032f3e4420bfe701dd8e8cbcde.dll">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
tQZlARYAyQBlAQ4AlgEUAA4AvAAUAA4AzwcUAA4ApAAUAA4AQgAUAA4AtwcUAA4AagUUAAYAEQEK
AA4A4gYUAA4A8wYUAAYA0gDYBBoADAgRBxoAmwcRBwYAjQHYBAYA3gDYBAAAAAABAAAAAAABAAEA
AQAAAPUEgAA5AAEAAQAAABAADwaCBkEAAQAFAAABEADIBoIGdQADAAkAAwEAAF4HAABdAAQADAAR
AOQEGwERAMABHwERAHAAIwEGBjoAJwFWgE4HKgFWgKABKgFQIAAAAACRGM4FLgEBAGggAAAAAJEA
5AMyAQEAmCAAAAAAhgD7BAYAAwAMIwAAAACGGMgFBgADABQjAAAAAIMYyAUGAAMAHCMAAAAAkwiY
BToBAwBIIwAAAACTCKgBPwEDAE8jAAAAAJMItAFEAQMAVyMAAAAAlgiPB0oBBABeIwAAAACGGMgF
BgAEAGYjAAAAAJEYzgUuAQQAAAABAJEFAAACAAUHAAABAMoDCQDIBQEAEQDIBQYAGQDIBQoAKQDI
BRAAMQDIBRAAOQDIBRAAQQDIBRAASQDIBRAAUQDIBRAAWQDIBRAAYQDIBRAAaQDIBQYAwQDIBQYA
4QDIBRUA8QDIBQYA+QAKBRsAAQHIBSAA+QDQAyYAiQAWAS0ACQHABS0ACQEmBzEAEQGFATYAeQAC
ATwAkQDIBQYAkQDCBFAAcQBWB1cAIQGxBl0AKQHPBGMAMQHAA2oAgQAcBC0AkQAsARAAkQAfARAA
kQBjABAAkQCSAW4AkQDlBxAAmQDIBQYAmQDwBHUAoQDIBQYAoQC4AHsACQFLCIIAmQBrBocACQF3
BzYAmQC/BpkAmQA3CKQAmQBsBzEAmQB5BbAAaQFCAbcAcQFUAbwAqQAKB8IAmQALAcgAmQAkCM8A
mQAEAgYAiQEKAgYAkQEHCNoAIQGoBwEAcQDIBQYAgQDIBQYAoQHwAOEAoQEXCOoAyQDIBe8A6QDI
BQYACAAUABEBCAAYABYBKQBzAIYBLgALAF4BLgATAGcBLgAbAIYBLgAjAI8BLgArALgBLgAzALgB
LgA7ALgBLgBDAI8BLgBLAL4BLgBTALgBLgBbANUBQwBjABYBSQBzAIYBYQB7ABYBYwBrABYBQgAD
AAEABAADAAAAnAVPAQAAyAFUAQAAkwdZAQIABgADAAIABwAFAAEACAAFAAIACQAHAASAAAABAAAA
tB7XUgAAAAAAAIAAAAAEAAAAAAAAAAAAAAD2AFoAAAAAAA8AAAAAAAAAAAAAAP8AKgQAAAAAAQAI
AAMAIC0AAAAACAGFBwAAAAAEAAAAAAAAAAAAAAD2ANgEAAAAAA8AAAAAAAAAAAAAAP8AGwAAAAAA
BAAAAAAAAAAAAAAA9gARBwAAAAAAAAAAAQAAABkGAAAFAAIAAAAAPE1vZHVsZT4AU3lzdGVtLklP
AFdpblNDUABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeW5jaHJvbml6
YXRpb25Dcml0ZXJpYQBtc2NvcmxpYgBzZXRfUGFzc3dvcmQAZGVmYXVsdEluc3RhbmNlAFNUXzIz
NDM0MDAzMmYzZTQ0MjBiZmU3MDFkZDhlOGNiY2RlAFN5bmNocm9uaXphdGlvbk1vZGUAc2V0X1Ry
YW5zZmVyTW9kZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBMb2FkRmlsZQBSZW1vdmVGaWxlAGdldF9OYW1lAHNldF9Vc2VyTmFtZQBzZXRf
SG9zdE5hbWUARGF0ZVRpbWUAZ2V0X0xhc3RXcml0ZVRpbWUAR2V0TGFzdFdyaXRlVGltZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbWJpbmUAVHlwZQBzZXRfRnRwU2VjdXJlAEZh
aWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAYWRkX0Fzc2VtYmx5
UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNUXzIzNDM0MDAzMmYzZTQ0MjBiZmU3MDFkZDhlOGNiY2RlLmRs
bABzZXRfUHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3Jp
cHRNYWluAEFwcERvbWFpbgBnZXRfQ3VycmVudERvbWFpbgBTZXNzaW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBS
ZW1vdGVGaWxlSW5mbwBHZXRGaWxlSW5mbwBDdWx0dXJlSW5mbwBzZW5kZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBSZXNvbHZlRXZlbnRIYW5kbGVyAFRvVXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfMjM0MzQwMDMyZjNlNDQyMGJmZTcwMWRkOGU4Y2JjZGUuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFN5bmNocm9uaXplRGlyZWN0b3JpZXMAU1RfMjM0
MzQwMDMyZjNlNDQyMGJmZTcwMWRkOGU4Y2JjZGUuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFB1
dEZpbGVzAFNldHRpbmdzAFJlc29sdmVFdmVudEFyZ3MAUmVtb3ZhbEV2ZW50QXJncwBUcmFuc2Zl
ckV2ZW50QXJncwBhcmdzAEVxdWFscwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBTZXNz
aW9uT3B0aW9ucwBUcmFuc2Zlck9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
RmlsZUV4aXN0cwBDb25jYXQAT2JqZWN0AFdpblNDUG5ldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1
bHQAc2V0X1Rhc2tSZXN1bHQAVHJhbnNmZXJPcGVyYXRpb25SZXN1bHQAU3luY2hyb25pemF0aW9u
UmVzdWx0AHNldF9UbHNIb3N0Q2VydGlmaWNhdGVGaW5nZXJwcmludABTaG93AE1lc3NhZ2VCb3gA
Z2V0X0Fzc2VtYmx5AFB1dEZpbGVUb0RpcmVjdG9yeQBQdXRGaWxlc1RvRGlyZWN0b3J5AElzTnVs
bE9yRW1wdHkAAAAAAA1XAEkATgBTAEMAUAAAgIdQADoAXABTAGgAYQByAGUAZAAgAEQAbwBjAHUA
bQBlAG4AdABzAFwASQBuAGYAbwByAG0AYQB0AGkAbwBuACAAUwB5AHMAdABlAG0AcwAgAFMAaABh
AHIAZQBkACAARABvAGMAdQBtAGUAbgB0AHMAXABKAFMATwBOAFwAZABsAGwAcwBcAAAbVwBpAG4A
UwBDAFAAbgBlAHQALgBkAGwAbAAAI1UAcwBlAHIAOgA6AFYAYQByAEgAbwBzAHQATgBhAG0AZQAA
I1UAcwBlAHIAOgA6AFYAYQByAFUAcwBlAHIATgBhAG0AZQAAI1UAcwBlAHIAOgA6AFYAYQByAFAA
YQBzAHMAdwBvAHIAZAAAKVUAcwBlAHIAOgA6AFYAYQByAFQAbABzAEgAbwBzAHQAQwBlAHIAdAAA
JVUAcwBlAHIAOgA6AFYAYQByAEwAbwBjAGEAbABQAGEAdABoAAAnVQBzAGUAcgA6ADoAVgBhAHIA
UwBlAHIAdgBlAHIAUABhAHQAaAAAI1UAcwBlAHIAOgA6AFYAYQByAEYAaQBsAGUATgBhAG0AZQAA
A1wAAAMqAAADPwAAcVMAVABfADIAMwA0ADMANAAwADAAMwAyAGYAMwBlADQANAAyADAAYgBmAGUA
NwAwADEAZABkADgAZQA4AGMAYgBjAGQAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAC+7ngOiAXRozSJv5CzVwWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFt
BAAAEn0FIAIBHBgGIAEBEoCBAyAADgQgAQIOBQACDg4OBQABEj0ODQcHEkkSTQ4ODhJREVUGIAEB
EYCNBSAAEoCRBSAAEoCVBiABEoCZHAMgABwGIAEBEYCdBSABARJJBiABARGAoQQAAQIOESAHEoCl
EYCpDg4CAhGArRJRCiAEEoCxDg4CElELIAUSgLEODg4CElEGIAESgLUOBCAAEVUFAAERVQ4FIAEC
EVUGIAESgL0OCiAEEoDBDg4CElEGAAERgM0OCAABEoDREYDVBCAAEj0GIAIBDhI9CLd6XFYZNOCJ
CImEXc2AgMyRCCJx7Eo8VtC/BAAAAAAEAQAAAAMGEmUDBhJpAwYSEAIGCAMGERQDAAABBwACEj0c
EkUEAAASZQQAABJpBQABARJpBAAAEhAECAASZQQIABJpBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzIzNDM0MDAzMmYzZTQ0MjBiZmU3
MDFkZDhlOGNiY2RlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAADwNgAAAAAAAAAAAAAKNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
/DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABANdStB4AAAEA11K0Hj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQAOABl
ADgAYwBiAGMAZABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
OAA2ADAALgAyADEAMgAwADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQAOABlADgA
YwBiAGMAZABlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAyADMANAAzADQAMAAwADMAMgBmADMAZQA0ADQAMgAwAGIAZgBlADcAMAAxAGQA
ZAA4AGUAOABjAGIAYwBkAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQA
OABlADgAYwBiAGMAZABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADgANgAwAC4AMgAxADIAMAA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADgANgAwAC4AMgAxADIAMAA3AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="237,42"
          Id="Package\Script Task - Push File to Server"
          TopLeft="720,357" />
        <AnnotationLayout
          Text="FTPS transfer files from local directory to server directory via WinSCP dll"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="534,45"
          Id="c7efcf4a-176b-49ec-b90d-26c4430636bd"
          TopLeft="613,268" />
        <AnnotationLayout
          Text="To use this package set the defined variables values.&#xA;This package also extends functionality via the value of VarFileName.&#xA;&#xA;NOTE: a file name must also include it's extension.&#xA;~ Leave the field blank to sync your remote directory with the local.&#xA;~ Wildcard characters ('?' '*') will match 0 to many files and transfer all matches.&#xA;~ An exact file name including extension will transfer only that file.&#xA;~ Enter a folder name with '\' at the end to transfer the entire folder. Or '\*' to transfer just it's contents."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="757,194"
          Id="f28c01a4-40b5-4ba7-982d-8bccf106aa71"
          TopLeft="586,454" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>