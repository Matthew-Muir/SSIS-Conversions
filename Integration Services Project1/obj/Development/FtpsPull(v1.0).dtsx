<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/29/2021 4:28:47 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TRAINING1"
  DTS:CreatorName="LCPUD\mattm"
  DTS:DTSID="{36D3FA39-20CB-4AC3-8EDA-FAE47CE8D283}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="FtpsPull v1 0"
  DTS:PackageType="5"
  DTS:VersionBuild="45"
  DTS:VersionGUID="{44556828-74D0-41E1-8FCC-CA48E953F4D7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7F94CBB8-CC39-4C28-A40C-1325304FD3BE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D89E03B-4CCD-478A-B708-EDABE8C2B034}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarHostName">
      <DTS:VariableValue
        DTS:DataType="8">172.19.124.133</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{805D3113-4ACD-4016-A34C-CC547034BEE2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarLocalPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\quick\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7BA3306-0F40-43AF-A2C4-0FB8AA5E221B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarPassword">
      <DTS:VariableValue
        DTS:DataType="8">mylittlered08AVEO!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BECBD59A-91B1-4667-9E8D-AED575602505}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarServerPath">
      <DTS:VariableValue
        DTS:DataType="8">/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC98F5A9-C328-4572-8128-EDDBFC2BA435}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarTlsHostCert">
      <DTS:VariableValue
        DTS:DataType="8">19:c9:75:1a:cd:9f:49:ae:10:b3:9c:a8:fe:d7:22:e3:2d:15:4c:f7:cd:39:6b:b7:6c:a6:b2:4e:d4:22:ff:e0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{896567D6-E726-450F-BABA-B4366E2A35A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarUserName">
      <DTS:VariableValue
        DTS:DataType="8">mattm</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task - Pull file from server"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{17A977EE-B466-4E2C-BD17-257FC98C574D}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Pull file from server"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_234340032f3e4420bfe701dd8e8cbcde"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::VarFileName,User::VarHostName,User::VarLocalPath,User::VarPassword,User::VarServerPath,User::VarTlsHostCert,User::VarUserName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_234340032f3e4420bfe701dd8e8cbcde.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9E393F36-5431-474A-B362-46490B0F86AB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_234340032f3e4420bfe701dd8e8cbcde</RootNamespace>
    <AssemblyName>ST_234340032f3e4420bfe701dd8e8cbcde</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <NuGetPackageImportStamp></NuGetPackageImportStamp>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.8.3.11552, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\mattm\Desktop\Work\XML_to_JSON_Proj\winscp\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
using System.IO;
using System.Linq;
#endregion

namespace ST_234340032f3e4420bfe701dd8e8cbcde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }

        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            //If dll can't be found. this will point it to a location that has it stored.
            if (args.Name.ToUpper().Contains("WINSCP"))
            {
                //Path to Dll file location.
                string path = @"P:\Shared Documents\Information Systems Shared Documents\JSON\dlls\";
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "WinSCPnet.dll"));
            }
            return null;
        }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            
            // TODO: Add your code here
            // Setup session options
            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Ftp,
                HostName = Dts.Variables["User::VarHostName"].Value.ToString(),
                UserName = Dts.Variables["User::VarUserName"].Value.ToString(),
                Password = Dts.Variables["User::VarPassword"].Value.ToString(),
                FtpSecure = FtpSecure.Explicit,
                TlsHostCertificateFingerprint = Dts.Variables["User::VarTlsHostCert"].Value.ToString()
            };

            try
            {
                using (Session session = new Session())
                {
                    // Connect
                    session.Open(sessionOptions);

                    var localPath = Dts.Variables["User::VarLocalPath"].Value.ToString();
                    var serverPath = Dts.Variables["User::VarServerPath"].Value.ToString();
                    var fileName = Dts.Variables["User::VarFileName"].Value.ToString();

                    // Upload files
                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                    if (String.IsNullOrEmpty(fileName)) // folder sync
                    {
                        session.SynchronizeDirectories(SynchronizationMode.Local, localPath, serverPath, false, false, SynchronizationCriteria.Either, null);
                    }

                    else if (!fileName.Contains('.') && !fileName.Contains('*') && !fileName.Contains('?')) // folder transfer
                    {
                        session.GetFiles(serverPath + fileName, localPath, false);
                    }

                    else if (fileName.Contains('*') || fileName.Contains('?')) //wildcard transfer
                    {
                        session.GetFilesToDirectory(serverPath, localPath, fileName, false);
                    }

                    else //Single file transfer
                    {
                        if (session.FileExists(localPath + fileName)) //check if file exists on server
                        {
                            if (!session.GetFileInfo(serverPath + fileName).LastWriteTime.Equals(File.GetLastWriteTime(localPath + fileName))) // check if files are different versions. If they're then delete server copy before transfer.
                            {
                                File.Delete(localPath + fileName);
                                session.GetFileToDirectory(serverPath + fileName, localPath);
                            }
                            //If file exists in local directory and versions are the same. No need to do anything
                        }
                        else //file doesn't exists on server. So put it there.
                        {
                            session.GetFileToDirectory(serverPath + fileName, localPath);
                        }
                    }
                    session.Close();
                }
            }
            catch (Exception e)
            {
                MessageBox.Show(e.ToString());
            }
            

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_234340032f3e4420bfe701dd8e8cbcde</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_234340032f3e4420bfe701dd8e8cbcde</msb:DisplayName>
    <msb:ProjectId>{680370A0-7659-4E2F-BA53-32D19E49B11A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_234340032f3e4420bfe701dd8e8cbcde.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Settings.get_Default():ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Sett" +
    "ings")]

namespace ST_234340032f3e4420bfe701dd8e8cbcde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_234340032f3e4420bfe701dd8e8cbcde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_234340032f3e4420bfe701dd8e8cbcde")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_234340032f3e4420bfe701dd8e8cbcde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_234340032f3e4420bfe701dd8e8cbcde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_234340032f3e4420bfe701dd8e8cbcde.dll">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
FgD9Bo4BFgDyAI4BDgDLASIADgB1ByIADgDlACIADgAGCCIADgDNACIADgBQACIAGgD7AM0FBgAB
AHEADgDuByIADgCmBSIABgA6ARgADgAqByIABgAGARQFHgBDCEgHHgDSB0gHBgC2ARQFBgASARQF
AAAAAA8AAAAAAAEAAQABAAAAMQWpADkAAQABAAAAEABXBsoGQQABAAUAAAEQABAHygZxAAMACQAD
AQAAlQcAAFkABAAMABEAIAUsAREA9QEwAREAmQA0AQYGSAA4AVaAhQc7AVaA1QE7AVAgAAAAAJEY
FgY/AQEAaCAAAAAAkQAgBEMBAQCYIAAAAACGADcFBgADABAjAAAAAIYYEAYGAAMAGCMAAAAAgxgQ
BgYAAwAgIwAAAACTCOAFSwEDAEwjAAAAAJMI3QFQAQMAUyMAAAAAkwjpAVUBAwBbIwAAAACWCMYH
WwEEAGIjAAAAAIYYEAYGAAQAaiMAAAAAkRgWBj8BBAAAAAEA2QUAAAIAPAcAAAEABgQJABAGAQAR
ABAGBgAZABAGCgApABAGEAAxABAGEAA5ABAGEABBABAGEABJABAGEABRABAGEABZABAGEABhABAG
EABpABAGBgC5ABAGBgDZABAGFQDpABAGBgDxAEYFGwD5ABAGIADxAAwEJgCJAD8BLAABAQgGLAAB
AV0HMAAJAa4BNQB5ADYBOwCRABAGBgCRAP4ETQBxAI0HVAAZAfkGWgAhAQsFYAApAfwDZwCBAFgE
LACRAFUBEACRAEgBEACRAIwAEACRAMcBawCRABwIEACZABAGBgCZACwFcgA5ARAGBgA5AeEAeAAB
AYIIfwCZALMGhABhAV0HlwABAa4HNQCZAAcHqQCZAG4ItQCZAKMHMACZALUFwgB5AWsByQCBAX0B
zgChAEEH1ACBAVwC2gCZAFsI3wCZADkCBgCRAT8CBgCZAT4I6wAZAd8HAQBxABAGBgCBABAGBgCp
ASQB8gCpAU4I+wDBABAGAAHhABAGBgAIABQAIgEIABgAJwEpAHMAlwEuAAsAbwEuABMAeAEuABsA
lwEuACMAoAEuACsAyQEuADMAyQEuADsAyQEuAEMAoAEuAEsAzwEuAFMAyQEuAFsA5gFDAGMAJwFJ
AHMAlwFhAHsAJwFjAGsAJwFBAAMAAQAEAAMAAADkBWABAAD9AWUBAADKB2oBAgAGAAMAAgAHAAUA
AQAIAAUAAgAJAAcABIAAAAEAAAC0HhVcAAAAAAAAqQAAAAQAAAAAAAAAAAAAAAcBaAAAAAAADwAA
AAAAAAAAAAAAEAFmBAAAAAABAAgAAwAgLQAAAAAZAbwHAAAAAAQAAAAAAAAAAAAAAAcBFAUAAAAA
DwAAAAAAAAAAAAAAEAEpAAAAAAAEAAAAAAAAAAAAAAAHAbsBAAAAAAQAAAAAAAAAAAAAAAcBSAcA
AAAAAAAAAAEAAABhBgAABQACAFUApQAAAABJRW51bWVyYWJsZWAxADxNb2R1bGU+AFN5c3RlbS5J
TwBXaW5TQ1AATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3luY2hyb25p
emF0aW9uQ3JpdGVyaWEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAc2V0X1Bh
c3N3b3JkAGRlZmF1bHRJbnN0YW5jZQBTVF8yMzQzNDAwMzJmM2U0NDIwYmZlNzAxZGQ4ZThjYmNk
ZQBTeW5jaHJvbml6YXRpb25Nb2RlAHNldF9UcmFuc2Zlck1vZGUAVmFyaWFibGUARW51bWVyYWJs
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBMb2FkRmls
ZQBnZXRfTmFtZQBzZXRfVXNlck5hbWUAc2V0X0hvc3ROYW1lAERhdGVUaW1lAGdldF9MYXN0V3Jp
dGVUaW1lAEdldExhc3RXcml0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBD
b21iaW5lAFR5cGUAU3lzdGVtLkNvcmUAc2V0X0Z0cFNlY3VyZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBEZWxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1
cnJlbnREb21haW5fQXNzZW1ibHlSZXNvbHZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU1RfMjM0MzQwMDMyZjNlNDQyMGJmZTcwMWRkOGU4Y2JjZGUuZGxsAHNldF9Qcm90
b2NvbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AQXBw
RG9tYWluAGdldF9DdXJyZW50RG9tYWluAFNlc3Npb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAFJlbW90ZUZpbGVJ
bmZvAEdldEZpbGVJbmZvAEN1bHR1cmVJbmZvAFN5c3RlbS5MaW5xAHNlbmRlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAFJlc29sdmVFdmVudEhhbmRsZXIAVG9VcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF8yMzQzNDAwMzJmM2U0NDIwYmZlNzAxZGQ4ZThjYmNkZS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU3luY2hyb25pemVEaXJlY3RvcmllcwBTVF8y
MzQzNDAwMzJmM2U0NDIwYmZlNzAxZGQ4ZThjYmNkZS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMA
R2V0RmlsZXMAU2V0dGluZ3MAUmVzb2x2ZUV2ZW50QXJncwBUcmFuc2ZlckV2ZW50QXJncwBhcmdz
AEVxdWFscwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBTZXNzaW9uT3B0aW9ucwBUcmFu
c2Zlck9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARmlsZUV4aXN0cwBDb25j
YXQAT2JqZWN0AFdpblNDUG5ldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1
bHQAVHJhbnNmZXJPcGVyYXRpb25SZXN1bHQAU3luY2hyb25pemF0aW9uUmVzdWx0AHNldF9UbHNI
b3N0Q2VydGlmaWNhdGVGaW5nZXJwcmludABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AEdl
dEZpbGVUb0RpcmVjdG9yeQBHZXRGaWxlc1RvRGlyZWN0b3J5AElzTnVsbE9yRW1wdHkAAA1XAEkA
TgBTAEMAUAAAgIdQADoAXABTAGgAYQByAGUAZAAgAEQAbwBjAHUAbQBlAG4AdABzAFwASQBuAGYA
bwByAG0AYQB0AGkAbwBuACAAUwB5AHMAdABlAG0AcwAgAFMAaABhAHIAZQBkACAARABvAGMAdQBt
AGUAbgB0AHMAXABKAFMATwBOAFwAZABsAGwAcwBcAAAbVwBpAG4AUwBDAFAAbgBlAHQALgBkAGwA
bAAAI1UAcwBlAHIAOgA6AFYAYQByAEgAbwBzAHQATgBhAG0AZQAAI1UAcwBlAHIAOgA6AFYAYQBy
AFUAcwBlAHIATgBhAG0AZQAAI1UAcwBlAHIAOgA6AFYAYQByAFAAYQBzAHMAdwBvAHIAZAAAKVUA
cwBlAHIAOgA6AFYAYQByAFQAbABzAEgAbwBzAHQAQwBlAHIAdAAAJVUAcwBlAHIAOgA6AFYAYQBy
AEwAbwBjAGEAbABQAGEAdABoAAAnVQBzAGUAcgA6ADoAVgBhAHIAUwBlAHIAdgBlAHIAUABhAHQA
aAAAI1UAcwBlAHIAOgA6AFYAYQByAEYAaQBsAGUATgBhAG0AZQAAcVMAVABfADIAMwA0ADMANAAw
ADAAMwAyAGYAMwBlADQANAAyADAAYgBmAGUANwAwADEAZABkADgAZQA4AGMAYgBjAGQAZQAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAACiquLvz2PUQaOVMUm+H3eK
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpBAAAEnkFIAIBHBgFIAEBEn0DIAAOBCABAg4FAAIO
Dg4FAAESPQ4LBwYSSRJNDg4OEVEGIAEBEYCJBSAAEoCNBSAAEoCRBiABEoCVHAMgABwGIAEBEYCZ
BSABARJJBiABARGAoQQAAQIOEiAHEoClEYCpDg4CAhGArRKAnQ0QAQICFRKAtQEeAB4AAwoBAwsg
BBKAuQ4OAhKAnQwgBRKAuQ4ODgISgJ0GIAESgL0OBCAAEVEFAAERUQ4FIAECEVEEAAEBDgsgBBKA
xQ4OAhKAnQYAARGA0Q4IAAESgNURgNkEIAASPQYgAgEOEj0It3pcVhk04IkIiYRdzYCAzJEIInHs
SjxW0L8EAAAAAAQBAAAAAwYSYQMGEmUDBhIQAgYIAwYRFAMAAAEHAAISPRwSRQQAABJhBAAAEmUF
AAEBEmUEAAASEAQIABJhBAgAEmUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfMjM0MzQwMDMyZjNlNDQyMGJmZTcwMWRkOGU4Y2JjZGUA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAVDcAAAAAAAAAAAAAbjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA3AAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABABVctB4AAAEAFVy0Hj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQAOABl
ADgAYwBiAGMAZABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
OAA2ADAALgAyADMANQA3ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQAOABlADgA
YwBiAGMAZABlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAyADMANAAzADQAMAAwADMAMgBmADMAZQA0ADQAMgAwAGIAZgBlADcAMAAxAGQA
ZAA4AGUAOABjAGIAYwBkAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMgAzADQAMwA0ADAAMAAzADIAZgAzAGUANAA0ADIAMABiAGYAZQA3ADAAMQBkAGQA
OABlADgAYwBiAGMAZABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADgANgAwAC4AMgAzADUANwAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADgANgAwAC4AMgAzADUANwAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="237,42"
          Id="Package\Script Task - Pull file from server"
          TopLeft="720,357" />
        <AnnotationLayout
          Text="SFTP Pull from server to local directory via WinSCP dll"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="406,45"
          Id="c7efcf4a-176b-49ec-b90d-26c4430636bd"
          TopLeft="612,268" />
        <AnnotationLayout
          Text="To use this package. Set the defined variables values.&#xA;This package also extends functionality via the value of VarFileName.&#xA;&#xA;NOTE: a file name must also include it's extension&#xA;~ Leave the field blank to sync your remote local directory with remote.&#xA;~ Wildcard characters ('?' '*') will match 0 to many files and transfer all matches e.g. *.txt , myFi??.pdf&#xA;~ An exact file name including extension will transfer only that file.&#xA;~ A folder name will transfer a folder and it's contents e.g. myFolder&#xA;~ A folder name with '/*' at the end will return only the folders contents. eg myFolder/*"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="735,216"
          Id="f28c01a4-40b5-4ba7-982d-8bccf106aa71"
          TopLeft="527,437" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>